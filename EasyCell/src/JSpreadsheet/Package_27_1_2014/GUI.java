/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package JSpreadsheet.Package_27_1_2014;

import java.awt.event.KeyEvent;
import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.KeyStroke;
import javax.swing.UIManager;

/**
 *
 * @author remkoleene
 */
public class GUI extends javax.swing.JFrame {

    
    Model model = new Model();
    Model BGtable = new Model();
    Model Otable = new Model();
    Model ErrorTable = new Model();
    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        OPEN_FileChooser = new javax.swing.JFileChooser();
        jScrollPane3 = new javax.swing.JScrollPane();
        openTable = new javax.swing.JTable();
        SAVE_FileChooser = new javax.swing.JFileChooser();
        MAIN_NWTextField = new javax.swing.JTextField();
        MAIN_NETextField = new javax.swing.JTextField();
        MAIN_STextField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        MAIN_Table = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        MENU_OPEN = new javax.swing.JMenuItem();
        MENU_EXIT = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        MENU_CLEAR = new javax.swing.JMenuItem();

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(453, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(180, Short.MAX_VALUE))
        );

        OPEN_FileChooser.setDialogTitle("Choose a XML file to open");
        OPEN_FileChooser.setFileFilter(new XMLfilter());

        openTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(openTable);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(new ImageIcon("C:/Users/Remko/Desktop/IconEggCell.gif").getImage());
        setMinimumSize(new java.awt.Dimension(480, 270));

        MAIN_NWTextField.setEditable(false);
        MAIN_NWTextField.setMaximumSize(new java.awt.Dimension(140, 28));
        MAIN_NWTextField.setMinimumSize(new java.awt.Dimension(140, 28));

        MAIN_NETextField.setEditable(false);
        MAIN_NETextField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                MAIN_NETextFieldPropertyChange(evt);
            }
        });

        MAIN_STextField.setEditable(false);
        MAIN_STextField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                MAIN_STextFieldPropertyChange(evt);
            }
        });

        MAIN_Table.setAutoCreateRowSorter(true);
        MAIN_Table.getTableHeader().setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        JTable rowTable = new RowNumberTable(MAIN_Table);
        jScrollPane2.setRowHeaderView(rowTable);
        jScrollPane2.setCorner(JScrollPane.UPPER_LEFT_CORNER,
            rowTable.getTableHeader());
        MAIN_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "2", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""},
                {"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""}
            },
            new String [] {
                "          1", "          2", "          3", "          4", "          5", "          6", "          7", "          8", "          9", "         10", "         11", "         12", "         13", "         14", "         15", "         16"
            }
        ));
        MAIN_Table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        MAIN_Table.setCellSelectionEnabled(true);
        MAIN_Table.getTableHeader().setReorderingAllowed(false);
        MAIN_Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MAIN_TableMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                MAIN_TableMouseReleased(evt);
            }
        });
        MAIN_Table.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                MAIN_TablePropertyChange(evt);
            }
        });
        MAIN_Table.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                MAIN_TableKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(MAIN_Table);
        MAIN_Table.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        jMenu1.setText("File");

        MENU_OPEN.setText("Open");
        MENU_OPEN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MENU_OPENActionPerformed(evt);
            }
        });
        jMenu1.add(MENU_OPEN);

        MENU_EXIT.setText("Exit");
        MENU_EXIT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MENU_EXITActionPerformed(evt);
            }
        });
        jMenu1.add(MENU_EXIT);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        MENU_CLEAR.setText("Clear ALL");
        MENU_CLEAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MENU_CLEARActionPerformed(evt);
            }
        });
        jMenu2.add(MENU_CLEAR);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 678, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(MAIN_NWTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(MAIN_NETextField))
                    .addComponent(MAIN_STextField, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MAIN_NWTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MAIN_NETextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MAIN_STextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MAIN_TablePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_MAIN_TablePropertyChange
    String errorMessage = "";
            for (int y = 0; y<MAIN_Table.getColumnCount(); y++){
            for(int x = 0; x<MAIN_Table.getRowCount(); x++){
                  if(!(((String)MAIN_Table.getValueAt( x, y )).equals("#ERROR"))){
                        Otable.setContent(x, y, ((String)MAIN_Table.getValueAt( x, y )));                
                   }
                  //Strings for the result and for the errormessage
                  String result = (String) ( Otable.cellReader(Otable.getContent(x, y)))[0];
                  errorMessage = (String) ( Otable.cellReader(Otable.getContent(x, y)))[1];
                  ErrorTable.setContent(x,y,errorMessage);
         
                  //Process cellcontents and functions, and set them in B(ack)G(round)Table
                  MAIN_Table.setValueAt( result, x, y);
                  if (MAIN_Table.getSelectedColumnCount() == 1 && MAIN_Table.getSelectedRowCount() == 1 ){
                     MAIN_STextField.setText((String) ErrorTable.getContent(MAIN_Table.getSelectedRow(),MAIN_Table.getSelectedColumn()));
                     MAIN_NETextField.setText((String) Otable.getContent(MAIN_Table.getSelectedRow(),MAIN_Table.getSelectedColumn()));
                    }  
            }
        }
         
            
        
    }//GEN-LAST:event_MAIN_TablePropertyChange

    private void MAIN_TableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MAIN_TableMouseReleased

        if (MAIN_Table.getSelectedColumnCount() == 1 && MAIN_Table.getSelectedRowCount() == 1 ){

            MAIN_NWTextField.setText("x" + (MAIN_Table.getSelectedColumn() + 1) + "y" + (MAIN_Table.getSelectedRow()+1));
            
        } else {
       
                MAIN_NWTextField.setText("x" + (MAIN_Table.getSelectedColumn()+1) + "y" + (MAIN_Table.getSelectedRow()+1) + ":" + "x" + (MAIN_Table.getSelectedColumn()+MAIN_Table.getSelectedColumnCount()) + "y" + (MAIN_Table.getSelectedRow()+MAIN_Table.getSelectedRowCount()));      
                
        }
        
    }//GEN-LAST:event_MAIN_TableMouseReleased

    private void MAIN_TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MAIN_TableMouseClicked
        if (MAIN_Table.getSelectedColumnCount() == 1 && MAIN_Table.getSelectedRowCount() == 1 ){
                 MAIN_NETextField.setText((String) Otable.getContent(MAIN_Table.getSelectedRow(),MAIN_Table.getSelectedColumn()));
                 MAIN_STextField.setText((String) ErrorTable.getContent(MAIN_Table.getSelectedRow(),MAIN_Table.getSelectedColumn()));
        }        // TODO add your handling code here:
    }//GEN-LAST:event_MAIN_TableMouseClicked

    private void MAIN_NETextFieldPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_MAIN_NETextFieldPropertyChange
         if (MAIN_Table.getSelectedColumnCount() == 1 && MAIN_Table.getSelectedRowCount() == 1 ){
             MAIN_NETextField.setText((String) Otable.getContent(MAIN_Table.getSelectedRow(),MAIN_Table.getSelectedColumn()));
         }
    }//GEN-LAST:event_MAIN_NETextFieldPropertyChange

    private void MAIN_TableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MAIN_TableKeyPressed
       KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0 ,true);
    }//GEN-LAST:event_MAIN_TableKeyPressed

    private void MENU_EXITActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MENU_EXITActionPerformed
    System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_MENU_EXITActionPerformed

    private void MENU_CLEARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MENU_CLEARActionPerformed
        
          for (int y = 0; y<MAIN_Table.getColumnCount(); y++){
            for(int x = 0; x<MAIN_Table.getRowCount(); x++){
                    MAIN_Table.setValueAt("",x,y);
            }
          }
    }//GEN-LAST:event_MENU_CLEARActionPerformed

    private void MENU_OPENActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MENU_OPENActionPerformed
         int returnVal = OPEN_FileChooser.showOpenDialog(this);
    if (returnVal == JFileChooser.APPROVE_OPTION) {
        File file = OPEN_FileChooser.getSelectedFile();
        for (int y = 0; y<MAIN_Table.getColumnCount(); y++){
            for(int x = 0; x<MAIN_Table.getRowCount(); x++){
                    MAIN_Table.setValueAt("",x,y);
            }
        }
          // What to do with the file, e.g. display it in a TextArea
          openTable.setModel(XMLParser.readXML(file.getAbsolutePath() ));
        for (int y = 0; y<openTable.getColumnCount(); y++){
            for(int x = 0; x<openTable.getRowCount(); x++){
                MAIN_Table.setValueAt(openTable.getValueAt(x, y),x,y);
            }
          }
          
    } else {
        System.out.println("File access cancelled by user.");
    }  
    }//GEN-LAST:event_MENU_OPENActionPerformed

    private void MAIN_STextFieldPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_MAIN_STextFieldPropertyChange
           if (MAIN_Table.getSelectedColumnCount() == 1 && MAIN_Table.getSelectedRowCount() == 1 ){
                     MAIN_STextField.setText((String) ErrorTable.getContent(MAIN_Table.getSelectedRow(),MAIN_Table.getSelectedColumn()));
           }          
             }//GEN-LAST:event_MAIN_STextFieldPropertyChange

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set th eNimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField MAIN_NETextField;
    private javax.swing.JTextField MAIN_NWTextField;
    private javax.swing.JTextField MAIN_STextField;
    private javax.swing.JTable MAIN_Table;
    private javax.swing.JMenuItem MENU_CLEAR;
    private javax.swing.JMenuItem MENU_EXIT;
    private javax.swing.JMenuItem MENU_OPEN;
    private javax.swing.JFileChooser OPEN_FileChooser;
    private javax.swing.JFileChooser SAVE_FileChooser;
    private javax.swing.JList jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable openTable;
    // End of variables declaration//GEN-END:variables


}
